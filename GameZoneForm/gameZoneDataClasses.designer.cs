#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameZoneForm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GameZone")]
	public partial class gameZoneDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void InsertACCOUNT2(ACCOUNT2 instance);
    partial void UpdateACCOUNT2(ACCOUNT2 instance);
    partial void DeleteACCOUNT2(ACCOUNT2 instance);
    partial void InsertACHIEVEMENT(ACHIEVEMENT instance);
    partial void UpdateACHIEVEMENT(ACHIEVEMENT instance);
    partial void DeleteACHIEVEMENT(ACHIEVEMENT instance);
    partial void InsertACQUISTO(ACQUISTO instance);
    partial void UpdateACQUISTO(ACQUISTO instance);
    partial void DeleteACQUISTO(ACQUISTO instance);
    partial void InsertAGGIORNAMENTO(AGGIORNAMENTO instance);
    partial void UpdateAGGIORNAMENTO(AGGIORNAMENTO instance);
    partial void DeleteAGGIORNAMENTO(AGGIORNAMENTO instance);
    partial void InsertBUG(BUG instance);
    partial void UpdateBUG(BUG instance);
    partial void DeleteBUG(BUG instance);
    partial void InsertCASA_PRODUTTRICE(CASA_PRODUTTRICE instance);
    partial void UpdateCASA_PRODUTTRICE(CASA_PRODUTTRICE instance);
    partial void DeleteCASA_PRODUTTRICE(CASA_PRODUTTRICE instance);
    partial void InsertCHIAVI(CHIAVI instance);
    partial void UpdateCHIAVI(CHIAVI instance);
    partial void DeleteCHIAVI(CHIAVI instance);
    partial void InsertCONSEGUIMENTO(CONSEGUIMENTO instance);
    partial void UpdateCONSEGUIMENTO(CONSEGUIMENTO instance);
    partial void DeleteCONSEGUIMENTO(CONSEGUIMENTO instance);
    partial void InsertETICHETTA(ETICHETTA instance);
    partial void UpdateETICHETTA(ETICHETTA instance);
    partial void DeleteETICHETTA(ETICHETTA instance);
    partial void InsertFRIENDLIST(FRIENDLIST instance);
    partial void UpdateFRIENDLIST(FRIENDLIST instance);
    partial void DeleteFRIENDLIST(FRIENDLIST instance);
    partial void InsertGENERE(GENERE instance);
    partial void UpdateGENERE(GENERE instance);
    partial void DeleteGENERE(GENERE instance);
    partial void InsertGIOCO(GIOCO instance);
    partial void UpdateGIOCO(GIOCO instance);
    partial void DeleteGIOCO(GIOCO instance);
    partial void InsertHARDWARE(HARDWARE instance);
    partial void UpdateHARDWARE(HARDWARE instance);
    partial void DeleteHARDWARE(HARDWARE instance);
    partial void InsertLAVORO(LAVORO instance);
    partial void UpdateLAVORO(LAVORO instance);
    partial void DeleteLAVORO(LAVORO instance);
    partial void InsertLIBRERIA(LIBRERIA instance);
    partial void UpdateLIBRERIA(LIBRERIA instance);
    partial void DeleteLIBRERIA(LIBRERIA instance);
    partial void InsertPERSONA(PERSONA instance);
    partial void UpdatePERSONA(PERSONA instance);
    partial void DeletePERSONA(PERSONA instance);
    partial void InsertRISCATTO(RISCATTO instance);
    partial void UpdateRISCATTO(RISCATTO instance);
    partial void DeleteRISCATTO(RISCATTO instance);
    partial void InsertSEGNALAZIONE(SEGNALAZIONE instance);
    partial void UpdateSEGNALAZIONE(SEGNALAZIONE instance);
    partial void DeleteSEGNALAZIONE(SEGNALAZIONE instance);
    partial void InsertSOFTWARE(SOFTWARE instance);
    partial void UpdateSOFTWARE(SOFTWARE instance);
    partial void DeleteSOFTWARE(SOFTWARE instance);
    partial void InsertTRANSAZIONE(TRANSAZIONE instance);
    partial void UpdateTRANSAZIONE(TRANSAZIONE instance);
    partial void DeleteTRANSAZIONE(TRANSAZIONE instance);
    partial void InsertTIPOLOGIA(TIPOLOGIA instance);
    partial void UpdateTIPOLOGIA(TIPOLOGIA instance);
    partial void DeleteTIPOLOGIA(TIPOLOGIA instance);
    partial void InsertVETRINA(VETRINA instance);
    partial void UpdateVETRINA(VETRINA instance);
    partial void DeleteVETRINA(VETRINA instance);
    #endregion
		
		public gameZoneDataClassesDataContext() : 
				base(global::GameZoneForm.Properties.Settings.Default.GameZoneConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public gameZoneDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public gameZoneDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public gameZoneDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public gameZoneDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNT
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<ACCOUNT2> ACCOUNT2
		{
			get
			{
				return this.GetTable<ACCOUNT2>();
			}
		}
		
		public System.Data.Linq.Table<ACHIEVEMENT> ACHIEVEMENT
		{
			get
			{
				return this.GetTable<ACHIEVEMENT>();
			}
		}
		
		public System.Data.Linq.Table<ACQUISTO> ACQUISTO
		{
			get
			{
				return this.GetTable<ACQUISTO>();
			}
		}
		
		public System.Data.Linq.Table<AGGIORNAMENTO> AGGIORNAMENTO
		{
			get
			{
				return this.GetTable<AGGIORNAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<BUG> BUG
		{
			get
			{
				return this.GetTable<BUG>();
			}
		}
		
		public System.Data.Linq.Table<CASA_PRODUTTRICE> CASA_PRODUTTRICE
		{
			get
			{
				return this.GetTable<CASA_PRODUTTRICE>();
			}
		}
		
		public System.Data.Linq.Table<CHIAVI> CHIAVI
		{
			get
			{
				return this.GetTable<CHIAVI>();
			}
		}
		
		public System.Data.Linq.Table<CONSEGUIMENTO> CONSEGUIMENTO
		{
			get
			{
				return this.GetTable<CONSEGUIMENTO>();
			}
		}
		
		public System.Data.Linq.Table<ETICHETTA> ETICHETTA
		{
			get
			{
				return this.GetTable<ETICHETTA>();
			}
		}
		
		public System.Data.Linq.Table<FRIENDLIST> FRIENDLIST
		{
			get
			{
				return this.GetTable<FRIENDLIST>();
			}
		}
		
		public System.Data.Linq.Table<GENERE> GENERE
		{
			get
			{
				return this.GetTable<GENERE>();
			}
		}
		
		public System.Data.Linq.Table<GIOCO> GIOCO
		{
			get
			{
				return this.GetTable<GIOCO>();
			}
		}
		
		public System.Data.Linq.Table<HARDWARE> HARDWARE
		{
			get
			{
				return this.GetTable<HARDWARE>();
			}
		}
		
		public System.Data.Linq.Table<LAVORO> LAVORO
		{
			get
			{
				return this.GetTable<LAVORO>();
			}
		}
		
		public System.Data.Linq.Table<LIBRERIA> LIBRERIA
		{
			get
			{
				return this.GetTable<LIBRERIA>();
			}
		}
		
		public System.Data.Linq.Table<PERSONA> PERSONA
		{
			get
			{
				return this.GetTable<PERSONA>();
			}
		}
		
		public System.Data.Linq.Table<RISCATTO> RISCATTO
		{
			get
			{
				return this.GetTable<RISCATTO>();
			}
		}
		
		public System.Data.Linq.Table<SEGNALAZIONE> SEGNALAZIONE
		{
			get
			{
				return this.GetTable<SEGNALAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<SOFTWARE> SOFTWARE
		{
			get
			{
				return this.GetTable<SOFTWARE>();
			}
		}
		
		public System.Data.Linq.Table<TRANSAZIONE> TRANSAZIONE
		{
			get
			{
				return this.GetTable<TRANSAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<TIPOLOGIA> TIPOLOGIA
		{
			get
			{
				return this.GetTable<TIPOLOGIA>();
			}
		}
		
		public System.Data.Linq.Table<VETRINA> VETRINA
		{
			get
			{
				return this.GetTable<VETRINA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _email;
		
		private string _Nickname;
		
		private System.DateTime _Data_creazione;
		
		private int _Saldo_contabile;
		
		private int _Software_possieduti;
		
		private int _Numero_amici;
		
		private int _Achievement_completati;
		
		private string _CF;
		
		private EntitySet<CONSEGUIMENTO> _CONSEGUIMENTO;
		
		private EntitySet<FRIENDLIST> _FRIENDLIST;
		
		private EntitySet<LIBRERIA> _LIBRERIA;
		
		private EntitySet<RISCATTO> _RISCATTO;
		
		private EntitySet<SEGNALAZIONE> _SEGNALAZIONE;
		
		private EntitySet<TRANSAZIONE> _TRANSAZIONE;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnNicknameChanging(string value);
    partial void OnNicknameChanged();
    partial void OnData_creazioneChanging(System.DateTime value);
    partial void OnData_creazioneChanged();
    partial void OnSaldo_contabileChanging(int value);
    partial void OnSaldo_contabileChanged();
    partial void OnSoftware_possiedutiChanging(int value);
    partial void OnSoftware_possiedutiChanged();
    partial void OnNumero_amiciChanging(int value);
    partial void OnNumero_amiciChanged();
    partial void OnAchievement_completatiChanging(int value);
    partial void OnAchievement_completatiChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    #endregion
		
		public ACCOUNT()
		{
			this._CONSEGUIMENTO = new EntitySet<CONSEGUIMENTO>(new Action<CONSEGUIMENTO>(this.attach_CONSEGUIMENTO), new Action<CONSEGUIMENTO>(this.detach_CONSEGUIMENTO));
			this._FRIENDLIST = new EntitySet<FRIENDLIST>(new Action<FRIENDLIST>(this.attach_FRIENDLIST), new Action<FRIENDLIST>(this.detach_FRIENDLIST));
			this._LIBRERIA = new EntitySet<LIBRERIA>(new Action<LIBRERIA>(this.attach_LIBRERIA), new Action<LIBRERIA>(this.detach_LIBRERIA));
			this._RISCATTO = new EntitySet<RISCATTO>(new Action<RISCATTO>(this.attach_RISCATTO), new Action<RISCATTO>(this.detach_RISCATTO));
			this._SEGNALAZIONE = new EntitySet<SEGNALAZIONE>(new Action<SEGNALAZIONE>(this.attach_SEGNALAZIONE), new Action<SEGNALAZIONE>(this.detach_SEGNALAZIONE));
			this._TRANSAZIONE = new EntitySet<TRANSAZIONE>(new Action<TRANSAZIONE>(this.attach_TRANSAZIONE), new Action<TRANSAZIONE>(this.detach_TRANSAZIONE));
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this.OnNicknameChanging(value);
					this.SendPropertyChanging();
					this._Nickname = value;
					this.SendPropertyChanged("Nickname");
					this.OnNicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_creazione", DbType="Date NOT NULL")]
		public System.DateTime Data_creazione
		{
			get
			{
				return this._Data_creazione;
			}
			set
			{
				if ((this._Data_creazione != value))
				{
					this.OnData_creazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_creazione = value;
					this.SendPropertyChanged("Data_creazione");
					this.OnData_creazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saldo_contabile", DbType="Int NOT NULL")]
		public int Saldo_contabile
		{
			get
			{
				return this._Saldo_contabile;
			}
			set
			{
				if ((this._Saldo_contabile != value))
				{
					this.OnSaldo_contabileChanging(value);
					this.SendPropertyChanging();
					this._Saldo_contabile = value;
					this.SendPropertyChanged("Saldo_contabile");
					this.OnSaldo_contabileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Software_possieduti", DbType="Int NOT NULL")]
		public int Software_possieduti
		{
			get
			{
				return this._Software_possieduti;
			}
			set
			{
				if ((this._Software_possieduti != value))
				{
					this.OnSoftware_possiedutiChanging(value);
					this.SendPropertyChanging();
					this._Software_possieduti = value;
					this.SendPropertyChanged("Software_possieduti");
					this.OnSoftware_possiedutiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_amici", DbType="Int NOT NULL")]
		public int Numero_amici
		{
			get
			{
				return this._Numero_amici;
			}
			set
			{
				if ((this._Numero_amici != value))
				{
					this.OnNumero_amiciChanging(value);
					this.SendPropertyChanging();
					this._Numero_amici = value;
					this.SendPropertyChanged("Numero_amici");
					this.OnNumero_amiciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Achievement_completati", DbType="Int NOT NULL")]
		public int Achievement_completati
		{
			get
			{
				return this._Achievement_completati;
			}
			set
			{
				if ((this._Achievement_completati != value))
				{
					this.OnAchievement_completatiChanging(value);
					this.SendPropertyChanging();
					this._Achievement_completati = value;
					this.SendPropertyChanged("Achievement_completati");
					this.OnAchievement_completatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_CONSEGUIMENTO", Storage="_CONSEGUIMENTO", ThisKey="email", OtherKey="email")]
		public EntitySet<CONSEGUIMENTO> CONSEGUIMENTO
		{
			get
			{
				return this._CONSEGUIMENTO;
			}
			set
			{
				this._CONSEGUIMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_FRIENDLIST", Storage="_FRIENDLIST", ThisKey="email", OtherKey="email")]
		public EntitySet<FRIENDLIST> FRIENDLIST
		{
			get
			{
				return this._FRIENDLIST;
			}
			set
			{
				this._FRIENDLIST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_LIBRERIA", Storage="_LIBRERIA", ThisKey="email", OtherKey="email")]
		public EntitySet<LIBRERIA> LIBRERIA
		{
			get
			{
				return this._LIBRERIA;
			}
			set
			{
				this._LIBRERIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_RISCATTO", Storage="_RISCATTO", ThisKey="email", OtherKey="email")]
		public EntitySet<RISCATTO> RISCATTO
		{
			get
			{
				return this._RISCATTO;
			}
			set
			{
				this._RISCATTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_SEGNALAZIONE", Storage="_SEGNALAZIONE", ThisKey="email", OtherKey="email")]
		public EntitySet<SEGNALAZIONE> SEGNALAZIONE
		{
			get
			{
				return this._SEGNALAZIONE;
			}
			set
			{
				this._SEGNALAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_TRANSAZIONE", Storage="_TRANSAZIONE", ThisKey="email", OtherKey="email")]
		public EntitySet<TRANSAZIONE> TRANSAZIONE
		{
			get
			{
				return this._TRANSAZIONE;
			}
			set
			{
				this._TRANSAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ACCOUNT", Storage="_PERSONA", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ACCOUNT.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ACCOUNT.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONSEGUIMENTO(CONSEGUIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_CONSEGUIMENTO(CONSEGUIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
		
		private void attach_FRIENDLIST(FRIENDLIST entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_FRIENDLIST(FRIENDLIST entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
		
		private void attach_LIBRERIA(LIBRERIA entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_LIBRERIA(LIBRERIA entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
		
		private void attach_RISCATTO(RISCATTO entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_RISCATTO(RISCATTO entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
		
		private void attach_SEGNALAZIONE(SEGNALAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_SEGNALAZIONE(SEGNALAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
		
		private void attach_TRANSAZIONE(TRANSAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = this;
		}
		
		private void detach_TRANSAZIONE(TRANSAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT2")]
	public partial class ACCOUNT2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _email;
		
		private EntitySet<FRIENDLIST> _FRIENDLIST;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public ACCOUNT2()
		{
			this._FRIENDLIST = new EntitySet<FRIENDLIST>(new Action<FRIENDLIST>(this.attach_FRIENDLIST), new Action<FRIENDLIST>(this.detach_FRIENDLIST));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT2_FRIENDLIST", Storage="_FRIENDLIST", ThisKey="email", OtherKey="F_A_email")]
		public EntitySet<FRIENDLIST> FRIENDLIST
		{
			get
			{
				return this._FRIENDLIST;
			}
			set
			{
				this._FRIENDLIST.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FRIENDLIST(FRIENDLIST entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT2 = this;
		}
		
		private void detach_FRIENDLIST(FRIENDLIST entity)
		{
			this.SendPropertyChanging();
			entity.ACCOUNT2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACHIEVEMENT")]
	public partial class ACHIEVEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Achievement;
		
		private string _Titolo;
		
		private string _Nome;
		
		private string _Difficolta;
		
		private int _Punti_esperienza;
		
		private EntitySet<CONSEGUIMENTO> _CONSEGUIMENTO;
		
		private EntityRef<GIOCO> _GIOCO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AchievementChanging(int value);
    partial void OnId_AchievementChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDifficoltaChanging(string value);
    partial void OnDifficoltaChanged();
    partial void OnPunti_esperienzaChanging(int value);
    partial void OnPunti_esperienzaChanged();
    #endregion
		
		public ACHIEVEMENT()
		{
			this._CONSEGUIMENTO = new EntitySet<CONSEGUIMENTO>(new Action<CONSEGUIMENTO>(this.attach_CONSEGUIMENTO), new Action<CONSEGUIMENTO>(this.detach_CONSEGUIMENTO));
			this._GIOCO = default(EntityRef<GIOCO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Achievement", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_Achievement
		{
			get
			{
				return this._Id_Achievement;
			}
			set
			{
				if ((this._Id_Achievement != value))
				{
					this.OnId_AchievementChanging(value);
					this.SendPropertyChanging();
					this._Id_Achievement = value;
					this.SendPropertyChanged("Id_Achievement");
					this.OnId_AchievementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					if (this._GIOCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficolta", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Difficolta
		{
			get
			{
				return this._Difficolta;
			}
			set
			{
				if ((this._Difficolta != value))
				{
					this.OnDifficoltaChanging(value);
					this.SendPropertyChanging();
					this._Difficolta = value;
					this.SendPropertyChanged("Difficolta");
					this.OnDifficoltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Punti_esperienza", DbType="Int NOT NULL")]
		public int Punti_esperienza
		{
			get
			{
				return this._Punti_esperienza;
			}
			set
			{
				if ((this._Punti_esperienza != value))
				{
					this.OnPunti_esperienzaChanging(value);
					this.SendPropertyChanging();
					this._Punti_esperienza = value;
					this.SendPropertyChanged("Punti_esperienza");
					this.OnPunti_esperienzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACHIEVEMENT_CONSEGUIMENTO", Storage="_CONSEGUIMENTO", ThisKey="Titolo,Nome", OtherKey="Titolo,Nome")]
		public EntitySet<CONSEGUIMENTO> CONSEGUIMENTO
		{
			get
			{
				return this._CONSEGUIMENTO;
			}
			set
			{
				this._CONSEGUIMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOCO_ACHIEVEMENT", Storage="_GIOCO", ThisKey="Titolo", OtherKey="Titolo", IsForeignKey=true)]
		public GIOCO GIOCO
		{
			get
			{
				return this._GIOCO.Entity;
			}
			set
			{
				GIOCO previousValue = this._GIOCO.Entity;
				if (((previousValue != value) 
							|| (this._GIOCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIOCO.Entity = null;
						previousValue.ACHIEVEMENT.Remove(this);
					}
					this._GIOCO.Entity = value;
					if ((value != null))
					{
						value.ACHIEVEMENT.Add(this);
						this._Titolo = value.Titolo;
					}
					else
					{
						this._Titolo = default(string);
					}
					this.SendPropertyChanged("GIOCO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONSEGUIMENTO(CONSEGUIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ACHIEVEMENT = this;
		}
		
		private void detach_CONSEGUIMENTO(CONSEGUIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ACHIEVEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACQUISTO")]
	public partial class ACQUISTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_transazione;
		
		private int _Codice;
		
		private EntityRef<TRANSAZIONE> _TRANSAZIONE;
		
		private EntityRef<VETRINA> _VETRINA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_transazioneChanging(int value);
    partial void OnId_transazioneChanged();
    partial void OnCodiceChanging(int value);
    partial void OnCodiceChanged();
    #endregion
		
		public ACQUISTO()
		{
			this._TRANSAZIONE = default(EntityRef<TRANSAZIONE>);
			this._VETRINA = default(EntityRef<VETRINA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_transazione", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_transazione
		{
			get
			{
				return this._Id_transazione;
			}
			set
			{
				if ((this._Id_transazione != value))
				{
					if (this._TRANSAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_transazioneChanging(value);
					this.SendPropertyChanging();
					this._Id_transazione = value;
					this.SendPropertyChanged("Id_transazione");
					this.OnId_transazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					if (this._VETRINA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSAZIONE_ACQUISTO", Storage="_TRANSAZIONE", ThisKey="Id_transazione", OtherKey="Id_transazione", IsForeignKey=true)]
		public TRANSAZIONE TRANSAZIONE
		{
			get
			{
				return this._TRANSAZIONE.Entity;
			}
			set
			{
				TRANSAZIONE previousValue = this._TRANSAZIONE.Entity;
				if (((previousValue != value) 
							|| (this._TRANSAZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRANSAZIONE.Entity = null;
						previousValue.ACQUISTO.Remove(this);
					}
					this._TRANSAZIONE.Entity = value;
					if ((value != null))
					{
						value.ACQUISTO.Add(this);
						this._Id_transazione = value.Id_transazione;
					}
					else
					{
						this._Id_transazione = default(int);
					}
					this.SendPropertyChanged("TRANSAZIONE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VETRINA_ACQUISTO", Storage="_VETRINA", ThisKey="Codice", OtherKey="Codice", IsForeignKey=true)]
		public VETRINA VETRINA
		{
			get
			{
				return this._VETRINA.Entity;
			}
			set
			{
				VETRINA previousValue = this._VETRINA.Entity;
				if (((previousValue != value) 
							|| (this._VETRINA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VETRINA.Entity = null;
						previousValue.ACQUISTO.Remove(this);
					}
					this._VETRINA.Entity = value;
					if ((value != null))
					{
						value.ACQUISTO.Add(this);
						this._Codice = value.Codice;
					}
					else
					{
						this._Codice = default(int);
					}
					this.SendPropertyChanged("VETRINA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AGGIORNAMENTO")]
	public partial class AGGIORNAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Versione;
		
		private string _Descrizione;
		
		private System.DateTime _Data;
		
		private string _Partita_iva;
		
		private decimal _ID_SOF;
		
		private EntitySet<BUG> _BUG;
		
		private EntityRef<CASA_PRODUTTRICE> _CASA_PRODUTTRICE;
		
		private EntityRef<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersioneChanging(string value);
    partial void OnVersioneChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnPartita_ivaChanging(string value);
    partial void OnPartita_ivaChanged();
    partial void OnID_SOFChanging(decimal value);
    partial void OnID_SOFChanged();
    #endregion
		
		public AGGIORNAMENTO()
		{
			this._BUG = new EntitySet<BUG>(new Action<BUG>(this.attach_BUG), new Action<BUG>(this.detach_BUG));
			this._CASA_PRODUTTRICE = default(EntityRef<CASA_PRODUTTRICE>);
			this._SOFTWARE = default(EntityRef<SOFTWARE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Versione", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Versione
		{
			get
			{
				return this._Versione;
			}
			set
			{
				if ((this._Versione != value))
				{
					this.OnVersioneChanging(value);
					this.SendPropertyChanging();
					this._Versione = value;
					this.SendPropertyChanged("Versione");
					this.OnVersioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partita_iva", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Partita_iva
		{
			get
			{
				return this._Partita_iva;
			}
			set
			{
				if ((this._Partita_iva != value))
				{
					if (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartita_ivaChanging(value);
					this.SendPropertyChanging();
					this._Partita_iva = value;
					this.SendPropertyChanged("Partita_iva");
					this.OnPartita_ivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOF", DbType="Decimal(10,0) NOT NULL")]
		public decimal ID_SOF
		{
			get
			{
				return this._ID_SOF;
			}
			set
			{
				if ((this._ID_SOF != value))
				{
					if (this._SOFTWARE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SOFChanging(value);
					this.SendPropertyChanging();
					this._ID_SOF = value;
					this.SendPropertyChanged("ID_SOF");
					this.OnID_SOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AGGIORNAMENTO_BUG", Storage="_BUG", ThisKey="Versione", OtherKey="Versione")]
		public EntitySet<BUG> BUG
		{
			get
			{
				return this._BUG;
			}
			set
			{
				this._BUG.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_AGGIORNAMENTO", Storage="_CASA_PRODUTTRICE", ThisKey="Partita_iva", OtherKey="Partita_iva", IsForeignKey=true)]
		public CASA_PRODUTTRICE CASA_PRODUTTRICE
		{
			get
			{
				return this._CASA_PRODUTTRICE.Entity;
			}
			set
			{
				CASA_PRODUTTRICE previousValue = this._CASA_PRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASA_PRODUTTRICE.Entity = null;
						previousValue.AGGIORNAMENTO.Remove(this);
					}
					this._CASA_PRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.AGGIORNAMENTO.Add(this);
						this._Partita_iva = value.Partita_iva;
					}
					else
					{
						this._Partita_iva = default(string);
					}
					this.SendPropertyChanged("CASA_PRODUTTRICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_AGGIORNAMENTO", Storage="_SOFTWARE", ThisKey="ID_SOF", OtherKey="ID_SOF", IsForeignKey=true)]
		public SOFTWARE SOFTWARE
		{
			get
			{
				return this._SOFTWARE.Entity;
			}
			set
			{
				SOFTWARE previousValue = this._SOFTWARE.Entity;
				if (((previousValue != value) 
							|| (this._SOFTWARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOFTWARE.Entity = null;
						previousValue.AGGIORNAMENTO.Remove(this);
					}
					this._SOFTWARE.Entity = value;
					if ((value != null))
					{
						value.AGGIORNAMENTO.Add(this);
						this._ID_SOF = value.ID_SOF;
					}
					else
					{
						this._ID_SOF = default(decimal);
					}
					this.SendPropertyChanged("SOFTWARE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUG(BUG entity)
		{
			this.SendPropertyChanging();
			entity.AGGIORNAMENTO = this;
		}
		
		private void detach_BUG(BUG entity)
		{
			this.SendPropertyChanging();
			entity.AGGIORNAMENTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUG")]
	public partial class BUG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_bug;
		
		private string _Desrizione;
		
		private System.DateTime _Data_riparazione;
		
		private string _Versione;
		
		private decimal _ID_SOF;
		
		private EntitySet<SEGNALAZIONE> _SEGNALAZIONE;
		
		private EntityRef<AGGIORNAMENTO> _AGGIORNAMENTO;
		
		private EntityRef<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_bugChanging(int value);
    partial void OnId_bugChanged();
    partial void OnDesrizioneChanging(string value);
    partial void OnDesrizioneChanged();
    partial void OnData_riparazioneChanging(System.DateTime value);
    partial void OnData_riparazioneChanged();
    partial void OnVersioneChanging(string value);
    partial void OnVersioneChanged();
    partial void OnID_SOFChanging(decimal value);
    partial void OnID_SOFChanged();
    #endregion
		
		public BUG()
		{
			this._SEGNALAZIONE = new EntitySet<SEGNALAZIONE>(new Action<SEGNALAZIONE>(this.attach_SEGNALAZIONE), new Action<SEGNALAZIONE>(this.detach_SEGNALAZIONE));
			this._AGGIORNAMENTO = default(EntityRef<AGGIORNAMENTO>);
			this._SOFTWARE = default(EntityRef<SOFTWARE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_bug", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_bug
		{
			get
			{
				return this._Id_bug;
			}
			set
			{
				if ((this._Id_bug != value))
				{
					this.OnId_bugChanging(value);
					this.SendPropertyChanging();
					this._Id_bug = value;
					this.SendPropertyChanged("Id_bug");
					this.OnId_bugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desrizione", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Desrizione
		{
			get
			{
				return this._Desrizione;
			}
			set
			{
				if ((this._Desrizione != value))
				{
					this.OnDesrizioneChanging(value);
					this.SendPropertyChanging();
					this._Desrizione = value;
					this.SendPropertyChanged("Desrizione");
					this.OnDesrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_riparazione", DbType="Date NOT NULL")]
		public System.DateTime Data_riparazione
		{
			get
			{
				return this._Data_riparazione;
			}
			set
			{
				if ((this._Data_riparazione != value))
				{
					this.OnData_riparazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_riparazione = value;
					this.SendPropertyChanged("Data_riparazione");
					this.OnData_riparazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Versione", DbType="Char(30)")]
		public string Versione
		{
			get
			{
				return this._Versione;
			}
			set
			{
				if ((this._Versione != value))
				{
					if (this._AGGIORNAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersioneChanging(value);
					this.SendPropertyChanging();
					this._Versione = value;
					this.SendPropertyChanged("Versione");
					this.OnVersioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOF", DbType="Decimal(10,0) NOT NULL")]
		public decimal ID_SOF
		{
			get
			{
				return this._ID_SOF;
			}
			set
			{
				if ((this._ID_SOF != value))
				{
					if (this._SOFTWARE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SOFChanging(value);
					this.SendPropertyChanging();
					this._ID_SOF = value;
					this.SendPropertyChanged("ID_SOF");
					this.OnID_SOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUG_SEGNALAZIONE", Storage="_SEGNALAZIONE", ThisKey="Id_bug", OtherKey="Id_bug")]
		public EntitySet<SEGNALAZIONE> SEGNALAZIONE
		{
			get
			{
				return this._SEGNALAZIONE;
			}
			set
			{
				this._SEGNALAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AGGIORNAMENTO_BUG", Storage="_AGGIORNAMENTO", ThisKey="Versione", OtherKey="Versione", IsForeignKey=true)]
		public AGGIORNAMENTO AGGIORNAMENTO
		{
			get
			{
				return this._AGGIORNAMENTO.Entity;
			}
			set
			{
				AGGIORNAMENTO previousValue = this._AGGIORNAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._AGGIORNAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AGGIORNAMENTO.Entity = null;
						previousValue.BUG.Remove(this);
					}
					this._AGGIORNAMENTO.Entity = value;
					if ((value != null))
					{
						value.BUG.Add(this);
						this._Versione = value.Versione;
					}
					else
					{
						this._Versione = default(string);
					}
					this.SendPropertyChanged("AGGIORNAMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_BUG", Storage="_SOFTWARE", ThisKey="ID_SOF", OtherKey="ID_SOF", IsForeignKey=true)]
		public SOFTWARE SOFTWARE
		{
			get
			{
				return this._SOFTWARE.Entity;
			}
			set
			{
				SOFTWARE previousValue = this._SOFTWARE.Entity;
				if (((previousValue != value) 
							|| (this._SOFTWARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOFTWARE.Entity = null;
						previousValue.BUG.Remove(this);
					}
					this._SOFTWARE.Entity = value;
					if ((value != null))
					{
						value.BUG.Add(this);
						this._ID_SOF = value.ID_SOF;
					}
					else
					{
						this._ID_SOF = default(decimal);
					}
					this.SendPropertyChanged("SOFTWARE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SEGNALAZIONE(SEGNALAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.BUG = this;
		}
		
		private void detach_SEGNALAZIONE(SEGNALAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.BUG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CASA_PRODUTTRICE")]
	public partial class CASA_PRODUTTRICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Partita_iva;
		
		private string _Nome;
		
		private string _Sede;
		
		private int _Bug_fixati;
		
		private EntitySet<AGGIORNAMENTO> _AGGIORNAMENTO;
		
		private EntitySet<HARDWARE> _HARDWARE;
		
		private EntitySet<LAVORO> _LAVORO;
		
		private EntitySet<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartita_ivaChanging(string value);
    partial void OnPartita_ivaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnSedeChanging(string value);
    partial void OnSedeChanged();
    partial void OnBug_fixatiChanging(int value);
    partial void OnBug_fixatiChanged();
    #endregion
		
		public CASA_PRODUTTRICE()
		{
			this._AGGIORNAMENTO = new EntitySet<AGGIORNAMENTO>(new Action<AGGIORNAMENTO>(this.attach_AGGIORNAMENTO), new Action<AGGIORNAMENTO>(this.detach_AGGIORNAMENTO));
			this._HARDWARE = new EntitySet<HARDWARE>(new Action<HARDWARE>(this.attach_HARDWARE), new Action<HARDWARE>(this.detach_HARDWARE));
			this._LAVORO = new EntitySet<LAVORO>(new Action<LAVORO>(this.attach_LAVORO), new Action<LAVORO>(this.detach_LAVORO));
			this._SOFTWARE = new EntitySet<SOFTWARE>(new Action<SOFTWARE>(this.attach_SOFTWARE), new Action<SOFTWARE>(this.detach_SOFTWARE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partita_iva", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Partita_iva
		{
			get
			{
				return this._Partita_iva;
			}
			set
			{
				if ((this._Partita_iva != value))
				{
					this.OnPartita_ivaChanging(value);
					this.SendPropertyChanging();
					this._Partita_iva = value;
					this.SendPropertyChanged("Partita_iva");
					this.OnPartita_ivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sede", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Sede
		{
			get
			{
				return this._Sede;
			}
			set
			{
				if ((this._Sede != value))
				{
					this.OnSedeChanging(value);
					this.SendPropertyChanging();
					this._Sede = value;
					this.SendPropertyChanged("Sede");
					this.OnSedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bug_fixati", DbType="Int NOT NULL")]
		public int Bug_fixati
		{
			get
			{
				return this._Bug_fixati;
			}
			set
			{
				if ((this._Bug_fixati != value))
				{
					this.OnBug_fixatiChanging(value);
					this.SendPropertyChanging();
					this._Bug_fixati = value;
					this.SendPropertyChanged("Bug_fixati");
					this.OnBug_fixatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_AGGIORNAMENTO", Storage="_AGGIORNAMENTO", ThisKey="Partita_iva", OtherKey="Partita_iva")]
		public EntitySet<AGGIORNAMENTO> AGGIORNAMENTO
		{
			get
			{
				return this._AGGIORNAMENTO;
			}
			set
			{
				this._AGGIORNAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_HARDWARE", Storage="_HARDWARE", ThisKey="Partita_iva", OtherKey="Partita_iva")]
		public EntitySet<HARDWARE> HARDWARE
		{
			get
			{
				return this._HARDWARE;
			}
			set
			{
				this._HARDWARE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_LAVORO", Storage="_LAVORO", ThisKey="Partita_iva", OtherKey="Partita_iva")]
		public EntitySet<LAVORO> LAVORO
		{
			get
			{
				return this._LAVORO;
			}
			set
			{
				this._LAVORO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_SOFTWARE", Storage="_SOFTWARE", ThisKey="Partita_iva", OtherKey="Partita_iva")]
		public EntitySet<SOFTWARE> SOFTWARE
		{
			get
			{
				return this._SOFTWARE;
			}
			set
			{
				this._SOFTWARE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AGGIORNAMENTO(AGGIORNAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = this;
		}
		
		private void detach_AGGIORNAMENTO(AGGIORNAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = null;
		}
		
		private void attach_HARDWARE(HARDWARE entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = this;
		}
		
		private void detach_HARDWARE(HARDWARE entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = null;
		}
		
		private void attach_LAVORO(LAVORO entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = this;
		}
		
		private void detach_LAVORO(LAVORO entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = null;
		}
		
		private void attach_SOFTWARE(SOFTWARE entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = this;
		}
		
		private void detach_SOFTWARE(SOFTWARE entity)
		{
			this.SendPropertyChanging();
			entity.CASA_PRODUTTRICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHIAVI")]
	public partial class CHIAVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_chiave;
		
		private System.DateTime _Data_creazione;
		
		private decimal _ID_SOF;
		
		private EntityRef<RISCATTO> _RISCATTO;
		
		private EntityRef<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_chiaveChanging(string value);
    partial void OnId_chiaveChanged();
    partial void OnData_creazioneChanging(System.DateTime value);
    partial void OnData_creazioneChanged();
    partial void OnID_SOFChanging(decimal value);
    partial void OnID_SOFChanged();
    #endregion
		
		public CHIAVI()
		{
			this._RISCATTO = default(EntityRef<RISCATTO>);
			this._SOFTWARE = default(EntityRef<SOFTWARE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_chiave", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_chiave
		{
			get
			{
				return this._Id_chiave;
			}
			set
			{
				if ((this._Id_chiave != value))
				{
					this.OnId_chiaveChanging(value);
					this.SendPropertyChanging();
					this._Id_chiave = value;
					this.SendPropertyChanged("Id_chiave");
					this.OnId_chiaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_creazione", DbType="Date NOT NULL")]
		public System.DateTime Data_creazione
		{
			get
			{
				return this._Data_creazione;
			}
			set
			{
				if ((this._Data_creazione != value))
				{
					this.OnData_creazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_creazione = value;
					this.SendPropertyChanged("Data_creazione");
					this.OnData_creazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOF", DbType="Decimal(10,0) NOT NULL")]
		public decimal ID_SOF
		{
			get
			{
				return this._ID_SOF;
			}
			set
			{
				if ((this._ID_SOF != value))
				{
					if (this._SOFTWARE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SOFChanging(value);
					this.SendPropertyChanging();
					this._ID_SOF = value;
					this.SendPropertyChanged("ID_SOF");
					this.OnID_SOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHIAVI_RISCATTO", Storage="_RISCATTO", ThisKey="Id_chiave", OtherKey="Id_chiave", IsUnique=true, IsForeignKey=false)]
		public RISCATTO RISCATTO
		{
			get
			{
				return this._RISCATTO.Entity;
			}
			set
			{
				RISCATTO previousValue = this._RISCATTO.Entity;
				if (((previousValue != value) 
							|| (this._RISCATTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RISCATTO.Entity = null;
						previousValue.CHIAVI = null;
					}
					this._RISCATTO.Entity = value;
					if ((value != null))
					{
						value.CHIAVI = this;
					}
					this.SendPropertyChanged("RISCATTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_CHIAVI", Storage="_SOFTWARE", ThisKey="ID_SOF", OtherKey="ID_SOF", IsForeignKey=true)]
		public SOFTWARE SOFTWARE
		{
			get
			{
				return this._SOFTWARE.Entity;
			}
			set
			{
				SOFTWARE previousValue = this._SOFTWARE.Entity;
				if (((previousValue != value) 
							|| (this._SOFTWARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOFTWARE.Entity = null;
						previousValue.CHIAVI.Remove(this);
					}
					this._SOFTWARE.Entity = value;
					if ((value != null))
					{
						value.CHIAVI.Add(this);
						this._ID_SOF = value.ID_SOF;
					}
					else
					{
						this._ID_SOF = default(decimal);
					}
					this.SendPropertyChanged("SOFTWARE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONSEGUIMENTO")]
	public partial class CONSEGUIMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _email;
		
		private string _Titolo;
		
		private string _Nome;
		
		private System.DateTime _Data;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
		private EntityRef<ACHIEVEMENT> _ACHIEVEMENT;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public CONSEGUIMENTO()
		{
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			this._ACHIEVEMENT = default(EntityRef<ACHIEVEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					if (this._ACHIEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					if (this._ACHIEVEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_CONSEGUIMENTO", Storage="_ACCOUNT", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.CONSEGUIMENTO.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.CONSEGUIMENTO.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACHIEVEMENT_CONSEGUIMENTO", Storage="_ACHIEVEMENT", ThisKey="Titolo,Nome", OtherKey="Titolo,Nome", IsForeignKey=true)]
		public ACHIEVEMENT ACHIEVEMENT
		{
			get
			{
				return this._ACHIEVEMENT.Entity;
			}
			set
			{
				ACHIEVEMENT previousValue = this._ACHIEVEMENT.Entity;
				if (((previousValue != value) 
							|| (this._ACHIEVEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACHIEVEMENT.Entity = null;
						previousValue.CONSEGUIMENTO.Remove(this);
					}
					this._ACHIEVEMENT.Entity = value;
					if ((value != null))
					{
						value.CONSEGUIMENTO.Add(this);
						this._Titolo = value.Titolo;
						this._Nome = value.Nome;
					}
					else
					{
						this._Titolo = default(string);
						this._Nome = default(string);
					}
					this.SendPropertyChanged("ACHIEVEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ETICHETTA")]
	public partial class ETICHETTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private EntitySet<GENERE> _GENERE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public ETICHETTA()
		{
			this._GENERE = new EntitySet<GENERE>(new Action<GENERE>(this.attach_GENERE), new Action<GENERE>(this.detach_GENERE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ETICHETTA_GENERE", Storage="_GENERE", ThisKey="Nome", OtherKey="Nome")]
		public EntitySet<GENERE> GENERE
		{
			get
			{
				return this._GENERE;
			}
			set
			{
				this._GENERE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GENERE(GENERE entity)
		{
			this.SendPropertyChanging();
			entity.ETICHETTA = this;
		}
		
		private void detach_GENERE(GENERE entity)
		{
			this.SendPropertyChanging();
			entity.ETICHETTA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FRIENDLIST")]
	public partial class FRIENDLIST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _F_A_email;
		
		private string _email;
		
		private System.DateTime _Data;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
		private EntityRef<ACCOUNT2> _ACCOUNT2;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_A_emailChanging(string value);
    partial void OnF_A_emailChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public FRIENDLIST()
		{
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			this._ACCOUNT2 = default(EntityRef<ACCOUNT2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_A_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string F_A_email
		{
			get
			{
				return this._F_A_email;
			}
			set
			{
				if ((this._F_A_email != value))
				{
					if (this._ACCOUNT2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnF_A_emailChanging(value);
					this.SendPropertyChanging();
					this._F_A_email = value;
					this.SendPropertyChanged("F_A_email");
					this.OnF_A_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_FRIENDLIST", Storage="_ACCOUNT", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.FRIENDLIST.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.FRIENDLIST.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT2_FRIENDLIST", Storage="_ACCOUNT2", ThisKey="F_A_email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT2 ACCOUNT2
		{
			get
			{
				return this._ACCOUNT2.Entity;
			}
			set
			{
				ACCOUNT2 previousValue = this._ACCOUNT2.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT2.Entity = null;
						previousValue.FRIENDLIST.Remove(this);
					}
					this._ACCOUNT2.Entity = value;
					if ((value != null))
					{
						value.FRIENDLIST.Add(this);
						this._F_A_email = value.email;
					}
					else
					{
						this._F_A_email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GENERE")]
	public partial class GENERE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Titolo;
		
		private EntityRef<ETICHETTA> _ETICHETTA;
		
		private EntityRef<GIOCO> _GIOCO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    #endregion
		
		public GENERE()
		{
			this._ETICHETTA = default(EntityRef<ETICHETTA>);
			this._GIOCO = default(EntityRef<GIOCO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					if (this._ETICHETTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					if (this._GIOCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ETICHETTA_GENERE", Storage="_ETICHETTA", ThisKey="Nome", OtherKey="Nome", IsForeignKey=true)]
		public ETICHETTA ETICHETTA
		{
			get
			{
				return this._ETICHETTA.Entity;
			}
			set
			{
				ETICHETTA previousValue = this._ETICHETTA.Entity;
				if (((previousValue != value) 
							|| (this._ETICHETTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ETICHETTA.Entity = null;
						previousValue.GENERE.Remove(this);
					}
					this._ETICHETTA.Entity = value;
					if ((value != null))
					{
						value.GENERE.Add(this);
						this._Nome = value.Nome;
					}
					else
					{
						this._Nome = default(string);
					}
					this.SendPropertyChanged("ETICHETTA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOCO_GENERE", Storage="_GIOCO", ThisKey="Titolo", OtherKey="Titolo", IsForeignKey=true)]
		public GIOCO GIOCO
		{
			get
			{
				return this._GIOCO.Entity;
			}
			set
			{
				GIOCO previousValue = this._GIOCO.Entity;
				if (((previousValue != value) 
							|| (this._GIOCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIOCO.Entity = null;
						previousValue.GENERE.Remove(this);
					}
					this._GIOCO.Entity = value;
					if ((value != null))
					{
						value.GENERE.Add(this);
						this._Titolo = value.Titolo;
					}
					else
					{
						this._Titolo = default(string);
					}
					this.SendPropertyChanged("GIOCO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIOCO")]
	public partial class GIOCO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Titolo;
		
		private int _Valutazione;
		
		private int _Numero_achievement;
		
		private EntitySet<ACHIEVEMENT> _ACHIEVEMENT;
		
		private EntitySet<GENERE> _GENERE;
		
		private EntitySet<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnValutazioneChanging(int value);
    partial void OnValutazioneChanged();
    partial void OnNumero_achievementChanging(int value);
    partial void OnNumero_achievementChanged();
    #endregion
		
		public GIOCO()
		{
			this._ACHIEVEMENT = new EntitySet<ACHIEVEMENT>(new Action<ACHIEVEMENT>(this.attach_ACHIEVEMENT), new Action<ACHIEVEMENT>(this.detach_ACHIEVEMENT));
			this._GENERE = new EntitySet<GENERE>(new Action<GENERE>(this.attach_GENERE), new Action<GENERE>(this.detach_GENERE));
			this._SOFTWARE = new EntitySet<SOFTWARE>(new Action<SOFTWARE>(this.attach_SOFTWARE), new Action<SOFTWARE>(this.detach_SOFTWARE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valutazione", DbType="Int NOT NULL")]
		public int Valutazione
		{
			get
			{
				return this._Valutazione;
			}
			set
			{
				if ((this._Valutazione != value))
				{
					this.OnValutazioneChanging(value);
					this.SendPropertyChanging();
					this._Valutazione = value;
					this.SendPropertyChanged("Valutazione");
					this.OnValutazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_achievement", DbType="Int NOT NULL")]
		public int Numero_achievement
		{
			get
			{
				return this._Numero_achievement;
			}
			set
			{
				if ((this._Numero_achievement != value))
				{
					this.OnNumero_achievementChanging(value);
					this.SendPropertyChanging();
					this._Numero_achievement = value;
					this.SendPropertyChanged("Numero_achievement");
					this.OnNumero_achievementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOCO_ACHIEVEMENT", Storage="_ACHIEVEMENT", ThisKey="Titolo", OtherKey="Titolo")]
		public EntitySet<ACHIEVEMENT> ACHIEVEMENT
		{
			get
			{
				return this._ACHIEVEMENT;
			}
			set
			{
				this._ACHIEVEMENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOCO_GENERE", Storage="_GENERE", ThisKey="Titolo", OtherKey="Titolo")]
		public EntitySet<GENERE> GENERE
		{
			get
			{
				return this._GENERE;
			}
			set
			{
				this._GENERE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOCO_SOFTWARE", Storage="_SOFTWARE", ThisKey="Titolo", OtherKey="Titolo")]
		public EntitySet<SOFTWARE> SOFTWARE
		{
			get
			{
				return this._SOFTWARE;
			}
			set
			{
				this._SOFTWARE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACHIEVEMENT(ACHIEVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.GIOCO = this;
		}
		
		private void detach_ACHIEVEMENT(ACHIEVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.GIOCO = null;
		}
		
		private void attach_GENERE(GENERE entity)
		{
			this.SendPropertyChanging();
			entity.GIOCO = this;
		}
		
		private void detach_GENERE(GENERE entity)
		{
			this.SendPropertyChanging();
			entity.GIOCO = null;
		}
		
		private void attach_SOFTWARE(SOFTWARE entity)
		{
			this.SendPropertyChanging();
			entity.GIOCO = this;
		}
		
		private void detach_SOFTWARE(SOFTWARE entity)
		{
			this.SendPropertyChanging();
			entity.GIOCO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HARDWARE")]
	public partial class HARDWARE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Seriale;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private string _Tipologia;
		
		private string _Modello;
		
		private int _Disponibilita;
		
		private string _Partita_iva;
		
		private EntitySet<VETRINA> _VETRINA;
		
		private EntityRef<CASA_PRODUTTRICE> _CASA_PRODUTTRICE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialeChanging(string value);
    partial void OnSerialeChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnTipologiaChanging(string value);
    partial void OnTipologiaChanged();
    partial void OnModelloChanging(string value);
    partial void OnModelloChanged();
    partial void OnDisponibilitaChanging(int value);
    partial void OnDisponibilitaChanged();
    partial void OnPartita_ivaChanging(string value);
    partial void OnPartita_ivaChanged();
    #endregion
		
		public HARDWARE()
		{
			this._VETRINA = new EntitySet<VETRINA>(new Action<VETRINA>(this.attach_VETRINA), new Action<VETRINA>(this.detach_VETRINA));
			this._CASA_PRODUTTRICE = default(EntityRef<CASA_PRODUTTRICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seriale", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Seriale
		{
			get
			{
				return this._Seriale;
			}
			set
			{
				if ((this._Seriale != value))
				{
					this.OnSerialeChanging(value);
					this.SendPropertyChanging();
					this._Seriale = value;
					this.SendPropertyChanged("Seriale");
					this.OnSerialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipologia", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Tipologia
		{
			get
			{
				return this._Tipologia;
			}
			set
			{
				if ((this._Tipologia != value))
				{
					this.OnTipologiaChanging(value);
					this.SendPropertyChanging();
					this._Tipologia = value;
					this.SendPropertyChanged("Tipologia");
					this.OnTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modello", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Modello
		{
			get
			{
				return this._Modello;
			}
			set
			{
				if ((this._Modello != value))
				{
					this.OnModelloChanging(value);
					this.SendPropertyChanging();
					this._Modello = value;
					this.SendPropertyChanged("Modello");
					this.OnModelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disponibilita", DbType="Int NOT NULL")]
		public int Disponibilita
		{
			get
			{
				return this._Disponibilita;
			}
			set
			{
				if ((this._Disponibilita != value))
				{
					this.OnDisponibilitaChanging(value);
					this.SendPropertyChanging();
					this._Disponibilita = value;
					this.SendPropertyChanged("Disponibilita");
					this.OnDisponibilitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partita_iva", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Partita_iva
		{
			get
			{
				return this._Partita_iva;
			}
			set
			{
				if ((this._Partita_iva != value))
				{
					if (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartita_ivaChanging(value);
					this.SendPropertyChanging();
					this._Partita_iva = value;
					this.SendPropertyChanged("Partita_iva");
					this.OnPartita_ivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HARDWARE_VETRINA", Storage="_VETRINA", ThisKey="Seriale", OtherKey="Seriale")]
		public EntitySet<VETRINA> VETRINA
		{
			get
			{
				return this._VETRINA;
			}
			set
			{
				this._VETRINA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_HARDWARE", Storage="_CASA_PRODUTTRICE", ThisKey="Partita_iva", OtherKey="Partita_iva", IsForeignKey=true)]
		public CASA_PRODUTTRICE CASA_PRODUTTRICE
		{
			get
			{
				return this._CASA_PRODUTTRICE.Entity;
			}
			set
			{
				CASA_PRODUTTRICE previousValue = this._CASA_PRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASA_PRODUTTRICE.Entity = null;
						previousValue.HARDWARE.Remove(this);
					}
					this._CASA_PRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.HARDWARE.Add(this);
						this._Partita_iva = value.Partita_iva;
					}
					else
					{
						this._Partita_iva = default(string);
					}
					this.SendPropertyChanged("CASA_PRODUTTRICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VETRINA(VETRINA entity)
		{
			this.SendPropertyChanging();
			entity.HARDWARE = this;
		}
		
		private void detach_VETRINA(VETRINA entity)
		{
			this.SendPropertyChanging();
			entity.HARDWARE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAVORO")]
	public partial class LAVORO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Partita_iva;
		
		private System.DateTime _Data_assunzione;
		
		private string _CF;
		
		private EntityRef<CASA_PRODUTTRICE> _CASA_PRODUTTRICE;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartita_ivaChanging(string value);
    partial void OnPartita_ivaChanged();
    partial void OnData_assunzioneChanging(System.DateTime value);
    partial void OnData_assunzioneChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    #endregion
		
		public LAVORO()
		{
			this._CASA_PRODUTTRICE = default(EntityRef<CASA_PRODUTTRICE>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partita_iva", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Partita_iva
		{
			get
			{
				return this._Partita_iva;
			}
			set
			{
				if ((this._Partita_iva != value))
				{
					if (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartita_ivaChanging(value);
					this.SendPropertyChanging();
					this._Partita_iva = value;
					this.SendPropertyChanged("Partita_iva");
					this.OnPartita_ivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_assunzione", DbType="Date NOT NULL")]
		public System.DateTime Data_assunzione
		{
			get
			{
				return this._Data_assunzione;
			}
			set
			{
				if ((this._Data_assunzione != value))
				{
					this.OnData_assunzioneChanging(value);
					this.SendPropertyChanging();
					this._Data_assunzione = value;
					this.SendPropertyChanged("Data_assunzione");
					this.OnData_assunzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_LAVORO", Storage="_CASA_PRODUTTRICE", ThisKey="Partita_iva", OtherKey="Partita_iva", IsForeignKey=true)]
		public CASA_PRODUTTRICE CASA_PRODUTTRICE
		{
			get
			{
				return this._CASA_PRODUTTRICE.Entity;
			}
			set
			{
				CASA_PRODUTTRICE previousValue = this._CASA_PRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASA_PRODUTTRICE.Entity = null;
						previousValue.LAVORO.Remove(this);
					}
					this._CASA_PRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.LAVORO.Add(this);
						this._Partita_iva = value.Partita_iva;
					}
					else
					{
						this._Partita_iva = default(string);
					}
					this.SendPropertyChanged("CASA_PRODUTTRICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_LAVORO", Storage="_PERSONA", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.LAVORO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.LAVORO.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIBRERIA")]
	public partial class LIBRERIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_SOF;
		
		private string _email;
		
		private System.DateTime _Data_acquisto;
		
		private int _Ore_di_utilizzo;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
		private EntityRef<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SOFChanging(decimal value);
    partial void OnID_SOFChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnData_acquistoChanging(System.DateTime value);
    partial void OnData_acquistoChanged();
    partial void OnOre_di_utilizzoChanging(int value);
    partial void OnOre_di_utilizzoChanged();
    #endregion
		
		public LIBRERIA()
		{
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			this._SOFTWARE = default(EntityRef<SOFTWARE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOF", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ID_SOF
		{
			get
			{
				return this._ID_SOF;
			}
			set
			{
				if ((this._ID_SOF != value))
				{
					if (this._SOFTWARE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SOFChanging(value);
					this.SendPropertyChanging();
					this._ID_SOF = value;
					this.SendPropertyChanged("ID_SOF");
					this.OnID_SOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_acquisto", DbType="Date NOT NULL")]
		public System.DateTime Data_acquisto
		{
			get
			{
				return this._Data_acquisto;
			}
			set
			{
				if ((this._Data_acquisto != value))
				{
					this.OnData_acquistoChanging(value);
					this.SendPropertyChanging();
					this._Data_acquisto = value;
					this.SendPropertyChanged("Data_acquisto");
					this.OnData_acquistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ore_di_utilizzo", DbType="Int NOT NULL")]
		public int Ore_di_utilizzo
		{
			get
			{
				return this._Ore_di_utilizzo;
			}
			set
			{
				if ((this._Ore_di_utilizzo != value))
				{
					this.OnOre_di_utilizzoChanging(value);
					this.SendPropertyChanging();
					this._Ore_di_utilizzo = value;
					this.SendPropertyChanged("Ore_di_utilizzo");
					this.OnOre_di_utilizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_LIBRERIA", Storage="_ACCOUNT", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.LIBRERIA.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.LIBRERIA.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_LIBRERIA", Storage="_SOFTWARE", ThisKey="ID_SOF", OtherKey="ID_SOF", IsForeignKey=true)]
		public SOFTWARE SOFTWARE
		{
			get
			{
				return this._SOFTWARE.Entity;
			}
			set
			{
				SOFTWARE previousValue = this._SOFTWARE.Entity;
				if (((previousValue != value) 
							|| (this._SOFTWARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOFTWARE.Entity = null;
						previousValue.LIBRERIA.Remove(this);
					}
					this._SOFTWARE.Entity = value;
					if ((value != null))
					{
						value.LIBRERIA.Add(this);
						this._ID_SOF = value.ID_SOF;
					}
					else
					{
						this._ID_SOF = default(decimal);
					}
					this.SendPropertyChanged("SOFTWARE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONA")]
	public partial class PERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private string _Titolo_di_studio;
		
		private string _Nome;
		
		private string _Cognome;
		
		private System.DateTime _Data_di_nascita;
		
		private string _Residenza;
		
		private EntitySet<ACCOUNT> _ACCOUNT;
		
		private EntitySet<LAVORO> _LAVORO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnTitolo_di_studioChanging(string value);
    partial void OnTitolo_di_studioChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnData_di_nascitaChanging(System.DateTime value);
    partial void OnData_di_nascitaChanged();
    partial void OnResidenzaChanging(string value);
    partial void OnResidenzaChanged();
    #endregion
		
		public PERSONA()
		{
			this._ACCOUNT = new EntitySet<ACCOUNT>(new Action<ACCOUNT>(this.attach_ACCOUNT), new Action<ACCOUNT>(this.detach_ACCOUNT));
			this._LAVORO = new EntitySet<LAVORO>(new Action<LAVORO>(this.attach_LAVORO), new Action<LAVORO>(this.detach_LAVORO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo_di_studio", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Titolo_di_studio
		{
			get
			{
				return this._Titolo_di_studio;
			}
			set
			{
				if ((this._Titolo_di_studio != value))
				{
					this.OnTitolo_di_studioChanging(value);
					this.SendPropertyChanging();
					this._Titolo_di_studio = value;
					this.SendPropertyChanged("Titolo_di_studio");
					this.OnTitolo_di_studioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_di_nascita", DbType="Date NOT NULL")]
		public System.DateTime Data_di_nascita
		{
			get
			{
				return this._Data_di_nascita;
			}
			set
			{
				if ((this._Data_di_nascita != value))
				{
					this.OnData_di_nascitaChanging(value);
					this.SendPropertyChanging();
					this._Data_di_nascita = value;
					this.SendPropertyChanged("Data_di_nascita");
					this.OnData_di_nascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Residenza", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Residenza
		{
			get
			{
				return this._Residenza;
			}
			set
			{
				if ((this._Residenza != value))
				{
					this.OnResidenzaChanging(value);
					this.SendPropertyChanging();
					this._Residenza = value;
					this.SendPropertyChanged("Residenza");
					this.OnResidenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ACCOUNT", Storage="_ACCOUNT", ThisKey="CF", OtherKey="CF")]
		public EntitySet<ACCOUNT> ACCOUNT
		{
			get
			{
				return this._ACCOUNT;
			}
			set
			{
				this._ACCOUNT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_LAVORO", Storage="_LAVORO", ThisKey="CF", OtherKey="CF")]
		public EntitySet<LAVORO> LAVORO
		{
			get
			{
				return this._LAVORO;
			}
			set
			{
				this._LAVORO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCOUNT(ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ACCOUNT(ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_LAVORO(LAVORO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_LAVORO(LAVORO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RISCATTO")]
	public partial class RISCATTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_chiave;
		
		private System.DateTime _Data_riscatto;
		
		private string _email;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
		private EntityRef<CHIAVI> _CHIAVI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_chiaveChanging(string value);
    partial void OnId_chiaveChanged();
    partial void OnData_riscattoChanging(System.DateTime value);
    partial void OnData_riscattoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public RISCATTO()
		{
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			this._CHIAVI = default(EntityRef<CHIAVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_chiave", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_chiave
		{
			get
			{
				return this._Id_chiave;
			}
			set
			{
				if ((this._Id_chiave != value))
				{
					if (this._CHIAVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_chiaveChanging(value);
					this.SendPropertyChanging();
					this._Id_chiave = value;
					this.SendPropertyChanged("Id_chiave");
					this.OnId_chiaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_riscatto", DbType="Date NOT NULL")]
		public System.DateTime Data_riscatto
		{
			get
			{
				return this._Data_riscatto;
			}
			set
			{
				if ((this._Data_riscatto != value))
				{
					this.OnData_riscattoChanging(value);
					this.SendPropertyChanging();
					this._Data_riscatto = value;
					this.SendPropertyChanged("Data_riscatto");
					this.OnData_riscattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_RISCATTO", Storage="_ACCOUNT", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.RISCATTO.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.RISCATTO.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHIAVI_RISCATTO", Storage="_CHIAVI", ThisKey="Id_chiave", OtherKey="Id_chiave", IsForeignKey=true)]
		public CHIAVI CHIAVI
		{
			get
			{
				return this._CHIAVI.Entity;
			}
			set
			{
				CHIAVI previousValue = this._CHIAVI.Entity;
				if (((previousValue != value) 
							|| (this._CHIAVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHIAVI.Entity = null;
						previousValue.RISCATTO = null;
					}
					this._CHIAVI.Entity = value;
					if ((value != null))
					{
						value.RISCATTO = this;
						this._Id_chiave = value.Id_chiave;
					}
					else
					{
						this._Id_chiave = default(string);
					}
					this.SendPropertyChanged("CHIAVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SEGNALAZIONE")]
	public partial class SEGNALAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _email;
		
		private int _Id_bug;
		
		private System.DateTime _Data_segnalazione;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
		private EntityRef<BUG> _BUG;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnId_bugChanging(int value);
    partial void OnId_bugChanged();
    partial void OnData_segnalazioneChanging(System.DateTime value);
    partial void OnData_segnalazioneChanged();
    #endregion
		
		public SEGNALAZIONE()
		{
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			this._BUG = default(EntityRef<BUG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_bug", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_bug
		{
			get
			{
				return this._Id_bug;
			}
			set
			{
				if ((this._Id_bug != value))
				{
					if (this._BUG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_bugChanging(value);
					this.SendPropertyChanging();
					this._Id_bug = value;
					this.SendPropertyChanged("Id_bug");
					this.OnId_bugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_segnalazione", DbType="Date NOT NULL")]
		public System.DateTime Data_segnalazione
		{
			get
			{
				return this._Data_segnalazione;
			}
			set
			{
				if ((this._Data_segnalazione != value))
				{
					this.OnData_segnalazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_segnalazione = value;
					this.SendPropertyChanged("Data_segnalazione");
					this.OnData_segnalazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_SEGNALAZIONE", Storage="_ACCOUNT", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.SEGNALAZIONE.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.SEGNALAZIONE.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUG_SEGNALAZIONE", Storage="_BUG", ThisKey="Id_bug", OtherKey="Id_bug", IsForeignKey=true)]
		public BUG BUG
		{
			get
			{
				return this._BUG.Entity;
			}
			set
			{
				BUG previousValue = this._BUG.Entity;
				if (((previousValue != value) 
							|| (this._BUG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUG.Entity = null;
						previousValue.SEGNALAZIONE.Remove(this);
					}
					this._BUG.Entity = value;
					if ((value != null))
					{
						value.SEGNALAZIONE.Add(this);
						this._Id_bug = value.Id_bug;
					}
					else
					{
						this._Id_bug = default(int);
					}
					this.SendPropertyChanged("BUG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SOFTWARE")]
	public partial class SOFTWARE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_SOF;
		
		private string _Nome;
		
		private string _Seriale;
		
		private string _Titolo;
		
		private string _Descrizione;
		
		private string _Tipologia;
		
		private string _Modello;
		
		private string _TIP_Nome;
		
		private string _Partita_iva;
		
		private EntitySet<AGGIORNAMENTO> _AGGIORNAMENTO;
		
		private EntitySet<BUG> _BUG;
		
		private EntitySet<CHIAVI> _CHIAVI;
		
		private EntitySet<LIBRERIA> _LIBRERIA;
		
		private EntitySet<VETRINA> _VETRINA;
		
		private EntityRef<GIOCO> _GIOCO;
		
		private EntityRef<CASA_PRODUTTRICE> _CASA_PRODUTTRICE;
		
		private EntityRef<TIPOLOGIA> _TIPOLOGIA1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SOFChanging(decimal value);
    partial void OnID_SOFChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnSerialeChanging(string value);
    partial void OnSerialeChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnTipologiaChanging(string value);
    partial void OnTipologiaChanged();
    partial void OnModelloChanging(string value);
    partial void OnModelloChanged();
    partial void OnTIP_NomeChanging(string value);
    partial void OnTIP_NomeChanged();
    partial void OnPartita_ivaChanging(string value);
    partial void OnPartita_ivaChanged();
    #endregion
		
		public SOFTWARE()
		{
			this._AGGIORNAMENTO = new EntitySet<AGGIORNAMENTO>(new Action<AGGIORNAMENTO>(this.attach_AGGIORNAMENTO), new Action<AGGIORNAMENTO>(this.detach_AGGIORNAMENTO));
			this._BUG = new EntitySet<BUG>(new Action<BUG>(this.attach_BUG), new Action<BUG>(this.detach_BUG));
			this._CHIAVI = new EntitySet<CHIAVI>(new Action<CHIAVI>(this.attach_CHIAVI), new Action<CHIAVI>(this.detach_CHIAVI));
			this._LIBRERIA = new EntitySet<LIBRERIA>(new Action<LIBRERIA>(this.attach_LIBRERIA), new Action<LIBRERIA>(this.detach_LIBRERIA));
			this._VETRINA = new EntitySet<VETRINA>(new Action<VETRINA>(this.attach_VETRINA), new Action<VETRINA>(this.detach_VETRINA));
			this._GIOCO = default(EntityRef<GIOCO>);
			this._CASA_PRODUTTRICE = default(EntityRef<CASA_PRODUTTRICE>);
			this._TIPOLOGIA1 = default(EntityRef<TIPOLOGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOF", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ID_SOF
		{
			get
			{
				return this._ID_SOF;
			}
			set
			{
				if ((this._ID_SOF != value))
				{
					this.OnID_SOFChanging(value);
					this.SendPropertyChanging();
					this._ID_SOF = value;
					this.SendPropertyChanged("ID_SOF");
					this.OnID_SOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seriale", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Seriale
		{
			get
			{
				return this._Seriale;
			}
			set
			{
				if ((this._Seriale != value))
				{
					this.OnSerialeChanging(value);
					this.SendPropertyChanging();
					this._Seriale = value;
					this.SendPropertyChanged("Seriale");
					this.OnSerialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titolo", DbType="Char(30)")]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					if (this._GIOCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipologia", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Tipologia
		{
			get
			{
				return this._Tipologia;
			}
			set
			{
				if ((this._Tipologia != value))
				{
					this.OnTipologiaChanging(value);
					this.SendPropertyChanging();
					this._Tipologia = value;
					this.SendPropertyChanged("Tipologia");
					this.OnTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modello", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Modello
		{
			get
			{
				return this._Modello;
			}
			set
			{
				if ((this._Modello != value))
				{
					this.OnModelloChanging(value);
					this.SendPropertyChanging();
					this._Modello = value;
					this.SendPropertyChanged("Modello");
					this.OnModelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIP_Nome", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string TIP_Nome
		{
			get
			{
				return this._TIP_Nome;
			}
			set
			{
				if ((this._TIP_Nome != value))
				{
					if (this._TIPOLOGIA1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIP_NomeChanging(value);
					this.SendPropertyChanging();
					this._TIP_Nome = value;
					this.SendPropertyChanged("TIP_Nome");
					this.OnTIP_NomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partita_iva", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Partita_iva
		{
			get
			{
				return this._Partita_iva;
			}
			set
			{
				if ((this._Partita_iva != value))
				{
					if (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartita_ivaChanging(value);
					this.SendPropertyChanging();
					this._Partita_iva = value;
					this.SendPropertyChanged("Partita_iva");
					this.OnPartita_ivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_AGGIORNAMENTO", Storage="_AGGIORNAMENTO", ThisKey="ID_SOF", OtherKey="ID_SOF")]
		public EntitySet<AGGIORNAMENTO> AGGIORNAMENTO
		{
			get
			{
				return this._AGGIORNAMENTO;
			}
			set
			{
				this._AGGIORNAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_BUG", Storage="_BUG", ThisKey="ID_SOF", OtherKey="ID_SOF")]
		public EntitySet<BUG> BUG
		{
			get
			{
				return this._BUG;
			}
			set
			{
				this._BUG.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_CHIAVI", Storage="_CHIAVI", ThisKey="ID_SOF", OtherKey="ID_SOF")]
		public EntitySet<CHIAVI> CHIAVI
		{
			get
			{
				return this._CHIAVI;
			}
			set
			{
				this._CHIAVI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_LIBRERIA", Storage="_LIBRERIA", ThisKey="ID_SOF", OtherKey="ID_SOF")]
		public EntitySet<LIBRERIA> LIBRERIA
		{
			get
			{
				return this._LIBRERIA;
			}
			set
			{
				this._LIBRERIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_VETRINA", Storage="_VETRINA", ThisKey="ID_SOF", OtherKey="ID_SOF")]
		public EntitySet<VETRINA> VETRINA
		{
			get
			{
				return this._VETRINA;
			}
			set
			{
				this._VETRINA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIOCO_SOFTWARE", Storage="_GIOCO", ThisKey="Titolo", OtherKey="Titolo", IsForeignKey=true)]
		public GIOCO GIOCO
		{
			get
			{
				return this._GIOCO.Entity;
			}
			set
			{
				GIOCO previousValue = this._GIOCO.Entity;
				if (((previousValue != value) 
							|| (this._GIOCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIOCO.Entity = null;
						previousValue.SOFTWARE.Remove(this);
					}
					this._GIOCO.Entity = value;
					if ((value != null))
					{
						value.SOFTWARE.Add(this);
						this._Titolo = value.Titolo;
					}
					else
					{
						this._Titolo = default(string);
					}
					this.SendPropertyChanged("GIOCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASA_PRODUTTRICE_SOFTWARE", Storage="_CASA_PRODUTTRICE", ThisKey="Partita_iva", OtherKey="Partita_iva", IsForeignKey=true)]
		public CASA_PRODUTTRICE CASA_PRODUTTRICE
		{
			get
			{
				return this._CASA_PRODUTTRICE.Entity;
			}
			set
			{
				CASA_PRODUTTRICE previousValue = this._CASA_PRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASA_PRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASA_PRODUTTRICE.Entity = null;
						previousValue.SOFTWARE.Remove(this);
					}
					this._CASA_PRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.SOFTWARE.Add(this);
						this._Partita_iva = value.Partita_iva;
					}
					else
					{
						this._Partita_iva = default(string);
					}
					this.SendPropertyChanged("CASA_PRODUTTRICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIA_SOFTWARE", Storage="_TIPOLOGIA1", ThisKey="TIP_Nome", OtherKey="Nome", IsForeignKey=true)]
		public TIPOLOGIA TIPOLOGIA1
		{
			get
			{
				return this._TIPOLOGIA1.Entity;
			}
			set
			{
				TIPOLOGIA previousValue = this._TIPOLOGIA1.Entity;
				if (((previousValue != value) 
							|| (this._TIPOLOGIA1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOLOGIA1.Entity = null;
						previousValue.SOFTWARE.Remove(this);
					}
					this._TIPOLOGIA1.Entity = value;
					if ((value != null))
					{
						value.SOFTWARE.Add(this);
						this._TIP_Nome = value.Nome;
					}
					else
					{
						this._TIP_Nome = default(string);
					}
					this.SendPropertyChanged("TIPOLOGIA1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AGGIORNAMENTO(AGGIORNAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = this;
		}
		
		private void detach_AGGIORNAMENTO(AGGIORNAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = null;
		}
		
		private void attach_BUG(BUG entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = this;
		}
		
		private void detach_BUG(BUG entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = null;
		}
		
		private void attach_CHIAVI(CHIAVI entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = this;
		}
		
		private void detach_CHIAVI(CHIAVI entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = null;
		}
		
		private void attach_LIBRERIA(LIBRERIA entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = this;
		}
		
		private void detach_LIBRERIA(LIBRERIA entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = null;
		}
		
		private void attach_VETRINA(VETRINA entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = this;
		}
		
		private void detach_VETRINA(VETRINA entity)
		{
			this.SendPropertyChanging();
			entity.SOFTWARE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANSAZIONE")]
	public partial class TRANSAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_transazione;
		
		private int _Numero_prodotti_comprati;
		
		private System.DateTime _Data;
		
		private int _Costo;
		
		private string _Metodo_pagamento;
		
		private string _email;
		
		private EntitySet<ACQUISTO> _ACQUISTO;
		
		private EntityRef<ACCOUNT> _ACCOUNT;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_transazioneChanging(int value);
    partial void OnId_transazioneChanged();
    partial void OnNumero_prodotti_compratiChanging(int value);
    partial void OnNumero_prodotti_compratiChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnCostoChanging(int value);
    partial void OnCostoChanged();
    partial void OnMetodo_pagamentoChanging(string value);
    partial void OnMetodo_pagamentoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public TRANSAZIONE()
		{
			this._ACQUISTO = new EntitySet<ACQUISTO>(new Action<ACQUISTO>(this.attach_ACQUISTO), new Action<ACQUISTO>(this.detach_ACQUISTO));
			this._ACCOUNT = default(EntityRef<ACCOUNT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_transazione", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_transazione
		{
			get
			{
				return this._Id_transazione;
			}
			set
			{
				if ((this._Id_transazione != value))
				{
					this.OnId_transazioneChanging(value);
					this.SendPropertyChanging();
					this._Id_transazione = value;
					this.SendPropertyChanged("Id_transazione");
					this.OnId_transazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_prodotti_comprati", DbType="Int NOT NULL")]
		public int Numero_prodotti_comprati
		{
			get
			{
				return this._Numero_prodotti_comprati;
			}
			set
			{
				if ((this._Numero_prodotti_comprati != value))
				{
					this.OnNumero_prodotti_compratiChanging(value);
					this.SendPropertyChanging();
					this._Numero_prodotti_comprati = value;
					this.SendPropertyChanged("Numero_prodotti_comprati");
					this.OnNumero_prodotti_compratiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Int NOT NULL")]
		public int Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metodo_pagamento", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string Metodo_pagamento
		{
			get
			{
				return this._Metodo_pagamento;
			}
			set
			{
				if ((this._Metodo_pagamento != value))
				{
					this.OnMetodo_pagamentoChanging(value);
					this.SendPropertyChanging();
					this._Metodo_pagamento = value;
					this.SendPropertyChanged("Metodo_pagamento");
					this.OnMetodo_pagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSAZIONE_ACQUISTO", Storage="_ACQUISTO", ThisKey="Id_transazione", OtherKey="Id_transazione")]
		public EntitySet<ACQUISTO> ACQUISTO
		{
			get
			{
				return this._ACQUISTO;
			}
			set
			{
				this._ACQUISTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_TRANSAZIONE", Storage="_ACCOUNT", ThisKey="email", OtherKey="email", IsForeignKey=true)]
		public ACCOUNT ACCOUNT
		{
			get
			{
				return this._ACCOUNT.Entity;
			}
			set
			{
				ACCOUNT previousValue = this._ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACCOUNT.Entity = null;
						previousValue.TRANSAZIONE.Remove(this);
					}
					this._ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.TRANSAZIONE.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("ACCOUNT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACQUISTO(ACQUISTO entity)
		{
			this.SendPropertyChanging();
			entity.TRANSAZIONE = this;
		}
		
		private void detach_ACQUISTO(ACQUISTO entity)
		{
			this.SendPropertyChanging();
			entity.TRANSAZIONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOLOGIA")]
	public partial class TIPOLOGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private EntitySet<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public TIPOLOGIA()
		{
			this._SOFTWARE = new EntitySet<SOFTWARE>(new Action<SOFTWARE>(this.attach_SOFTWARE), new Action<SOFTWARE>(this.detach_SOFTWARE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIA_SOFTWARE", Storage="_SOFTWARE", ThisKey="Nome", OtherKey="TIP_Nome")]
		public EntitySet<SOFTWARE> SOFTWARE
		{
			get
			{
				return this._SOFTWARE;
			}
			set
			{
				this._SOFTWARE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SOFTWARE(SOFTWARE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIA1 = this;
		}
		
		private void detach_SOFTWARE(SOFTWARE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIA1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VETRINA")]
	public partial class VETRINA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codice;
		
		private System.DateTime _Data_inizio;
		
		private System.Nullable<System.DateTime> _Data_fine;
		
		private int _Costo;
		
		private string _Seriale;
		
		private System.Nullable<decimal> _ID_SOF;
		
		private EntitySet<ACQUISTO> _ACQUISTO;
		
		private EntityRef<HARDWARE> _HARDWARE;
		
		private EntityRef<SOFTWARE> _SOFTWARE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(int value);
    partial void OnCodiceChanged();
    partial void OnData_inizioChanging(System.DateTime value);
    partial void OnData_inizioChanged();
    partial void OnData_fineChanging(System.Nullable<System.DateTime> value);
    partial void OnData_fineChanged();
    partial void OnCostoChanging(int value);
    partial void OnCostoChanged();
    partial void OnSerialeChanging(string value);
    partial void OnSerialeChanged();
    partial void OnID_SOFChanging(System.Nullable<decimal> value);
    partial void OnID_SOFChanged();
    #endregion
		
		public VETRINA()
		{
			this._ACQUISTO = new EntitySet<ACQUISTO>(new Action<ACQUISTO>(this.attach_ACQUISTO), new Action<ACQUISTO>(this.detach_ACQUISTO));
			this._HARDWARE = default(EntityRef<HARDWARE>);
			this._SOFTWARE = default(EntityRef<SOFTWARE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_inizio", DbType="Date NOT NULL")]
		public System.DateTime Data_inizio
		{
			get
			{
				return this._Data_inizio;
			}
			set
			{
				if ((this._Data_inizio != value))
				{
					this.OnData_inizioChanging(value);
					this.SendPropertyChanging();
					this._Data_inizio = value;
					this.SendPropertyChanged("Data_inizio");
					this.OnData_inizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_fine", DbType="Date")]
		public System.Nullable<System.DateTime> Data_fine
		{
			get
			{
				return this._Data_fine;
			}
			set
			{
				if ((this._Data_fine != value))
				{
					this.OnData_fineChanging(value);
					this.SendPropertyChanging();
					this._Data_fine = value;
					this.SendPropertyChanged("Data_fine");
					this.OnData_fineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Int NOT NULL")]
		public int Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seriale", DbType="Char(30)")]
		public string Seriale
		{
			get
			{
				return this._Seriale;
			}
			set
			{
				if ((this._Seriale != value))
				{
					if (this._HARDWARE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSerialeChanging(value);
					this.SendPropertyChanging();
					this._Seriale = value;
					this.SendPropertyChanged("Seriale");
					this.OnSerialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOF", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ID_SOF
		{
			get
			{
				return this._ID_SOF;
			}
			set
			{
				if ((this._ID_SOF != value))
				{
					if (this._SOFTWARE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SOFChanging(value);
					this.SendPropertyChanging();
					this._ID_SOF = value;
					this.SendPropertyChanged("ID_SOF");
					this.OnID_SOFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VETRINA_ACQUISTO", Storage="_ACQUISTO", ThisKey="Codice", OtherKey="Codice")]
		public EntitySet<ACQUISTO> ACQUISTO
		{
			get
			{
				return this._ACQUISTO;
			}
			set
			{
				this._ACQUISTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HARDWARE_VETRINA", Storage="_HARDWARE", ThisKey="Seriale", OtherKey="Seriale", IsForeignKey=true)]
		public HARDWARE HARDWARE
		{
			get
			{
				return this._HARDWARE.Entity;
			}
			set
			{
				HARDWARE previousValue = this._HARDWARE.Entity;
				if (((previousValue != value) 
							|| (this._HARDWARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HARDWARE.Entity = null;
						previousValue.VETRINA.Remove(this);
					}
					this._HARDWARE.Entity = value;
					if ((value != null))
					{
						value.VETRINA.Add(this);
						this._Seriale = value.Seriale;
					}
					else
					{
						this._Seriale = default(string);
					}
					this.SendPropertyChanged("HARDWARE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOFTWARE_VETRINA", Storage="_SOFTWARE", ThisKey="ID_SOF", OtherKey="ID_SOF", IsForeignKey=true)]
		public SOFTWARE SOFTWARE
		{
			get
			{
				return this._SOFTWARE.Entity;
			}
			set
			{
				SOFTWARE previousValue = this._SOFTWARE.Entity;
				if (((previousValue != value) 
							|| (this._SOFTWARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOFTWARE.Entity = null;
						previousValue.VETRINA.Remove(this);
					}
					this._SOFTWARE.Entity = value;
					if ((value != null))
					{
						value.VETRINA.Add(this);
						this._ID_SOF = value.ID_SOF;
					}
					else
					{
						this._ID_SOF = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("SOFTWARE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACQUISTO(ACQUISTO entity)
		{
			this.SendPropertyChanging();
			entity.VETRINA = this;
		}
		
		private void detach_ACQUISTO(ACQUISTO entity)
		{
			this.SendPropertyChanging();
			entity.VETRINA = null;
		}
	}
}
#pragma warning restore 1591
